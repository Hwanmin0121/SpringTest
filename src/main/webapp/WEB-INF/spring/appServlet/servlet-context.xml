<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /><!--어노테이션으로 기반의 컴포넌트 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!--localhost:8081/resources/images/mi.jpg -->
	<!--localhost:8081/img/mi.jpg  -->
	<resources mapping="/img/**" location="/resources/images/" />
<!--그래서 나중에 resources 폴더 안에 img,js,css 폴더를 만들어서 관리하는게 용이 하다  -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!--뷰리졸버 세팅  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!--컴포넌트 스캔하는 부모패키지 선언   -->
	<context:component-scan base-package="web.controller" /><!--스프링에서 사용되는 커다란 component  어노테이션으로 정의 되어있는걸 스캔한다. -->
	
	
	
</beans:beans>
